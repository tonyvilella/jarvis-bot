name: Deploy

# dispara quando algo novo é mesclado na main
on:
  push:
    branches: [ main ]

env:
  # ajuste se usar outra região
  GCP_REGION: us-east4

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1) Checkout do código
    - name: Checkout code
      uses: actions/checkout@v4

    # 2) Autentica no Google Cloud usando o secret GCP_SA_KEY
    - name: Auth
      id: gcp-auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    # 3) Instala gcloud + componente Docker (gera login no registry)
    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id:  ${{ secrets.GCP_PROJECT_ID }}
        install_components: docker   # **somente “docker”**

    # 4) Constrói a imagem Docker
    - name: Build container
      run: |
        IMAGE="us-east4-docker.pkg.dev/${{ env.GCP_REGION }}/${{ secrets.GCP_PROJECT_ID }}/jarvis-repo/jarvis-bot:${{ github.sha }}"
        docker build -t "$IMAGE" .
        echo "IMAGE_URI=$IMAGE" >> "$GITHUB_ENV"

    # 5) Faz push da imagem para o Artifact Registry
    - name: Push container
      run: docker push "$IMAGE_URI"

    # 6) Faz rollout no Cloud Run
    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: jarvis-bot-run         # mesmo nome criado no Cloud Run
        region:  ${{ env.GCP_REGION }}
        image:   ${{ env.IMAGE_URI }}
        project_id:        ${{ secrets.GCP_PROJECT_ID }}
        credentials_json:  ${{ secrets.GCP_SA_KEY }}
