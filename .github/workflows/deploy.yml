name: Deploy

on:
  push:
    branches: [main]        # dispara ao fazer push na main
  workflow_dispatch:        # botão “Run workflow”

concurrency:
  group: deploy-main        # só 1 deploy ativo
  cancel-in-progress: true

env:
  GCP_REGION: us-east4      # se mudar a região, altere aqui

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1 – checkout do código
      - name: Checkout
        uses: actions/checkout@v4

      # 2 – login na GCP com a service-account (JSON no secret)
      - name: Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3 – instala gcloud + config do projeto
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # 4 – autoriza Docker no Artifact Registry
      - name: Configure Docker auth
        run: |
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet

      # 5 – build da imagem e grava IMAGE_URI no GITHUB_ENV
      - name: Build image
        run: |
          IMAGE_URI="${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/jarvis-repo/jarvis-bot:${{ github.sha }}"
          docker build -t "$IMAGE_URI" .
          echo "IMAGE_URI=$IMAGE_URI" >> "$GITHUB_ENV"

      # 6 – push da imagem com tag SHA
      - name: Push image (sha)
        run: docker push "$IMAGE_URI"

      # 7 – **opcional**: também empurra tag latest
      - name: Tag & push latest
        run: |
          LATEST="${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/jarvis-repo/jarvis-bot:latest"
          docker tag "$IMAGE_URI" "$LATEST"
          docker push "$LATEST"

      # 8 – deploy (ou update) no Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy jarvis-bot-run \
            --image="$IMAGE_URI" \
            --platform=managed \
            --region="${{ env.GCP_REGION }}" \
            --port=8080 \
            --allow-unauthenticated

      # 9 – obtém a URL pública gerada
      - name: Get service URL
        id: url
        run: |
          URL=$(gcloud run services describe jarvis-bot-run \
                --region="${{ env.GCP_REGION }}" \
                --format='value(status.url)')
          echo "SERVICE_URL=$URL" >> "$GITHUB_ENV"
          echo "Service URL: $URL"

      # 10 – smoke test simples na raiz (/) com retries
      - name: Smoke test
        run: |
          echo "Aguardando 60 s para propagação do certificado TLS..."
          sleep 60
          curl -f --retry 5 --retry-delay 10 "$SERVICE_URL"
