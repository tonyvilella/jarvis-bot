name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: deploy-main          # só 1 deploy por vez na main
  cancel-in-progress: true

env:
  GCP_REGION: us-east4

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout
    - uses: actions/checkout@v4

    # 2. Autentica na GCP com a service‑account (secrets.GCP_SA_KEY)
    - name: Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    # 3. Instala gcloud (com Docker helper já incluso)
    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    # 4. Login do Docker no Artifact Registry
    - name: Configure Docker auth
      run: |
        gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet

    # 5. Build da imagem
    - name: Build image
      run: |
        IMAGE_URI="${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/jarvis-repo/jarvis-bot:${{ github.sha }}"
        docker build -t "$IMAGE_URI" .
        echo "IMAGE_URI=$IMAGE_URI" >> "$GITHUB_ENV"

    # 6. Push da imagem (sha) + tag latest
    - name: Push image
      run: |
        docker push "$IMAGE_URI"
        LATEST="${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/jarvis-repo/jarvis-bot:latest"
        docker tag "$IMAGE_URI" "$LATEST"
        docker push "$LATEST"

    # 7. Deploy no Cloud Run
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy jarvis-bot-run \
          --image="$IMAGE_URI" \
          --platform=managed \
          --region="${{ env.GCP_REGION }}" \
          --port=8080 \
          --allow-unauthenticated

    # 8. Descobre a URL pública recém‑criada
    - name: Get service URL
      id: url
      run: |
        URL=$(gcloud run services describe jarvis-bot-run \
              --region="${{ env.GCP_REGION }}" \
              --format='value(status.url)')
        echo "SERVICE_URL=$URL" >> "$GITHUB_ENV"
        echo "Service URL: $URL"

    # 9. Smoke test (aguarda propagação do certificado)
    - name: Smoke test
      run: |
        echo "Aguardando 60 s para o certificado TLS propagar..."
        sleep 60
        curl -f --retry 5 --retry-delay 10 "$SERVICE_URL/health"
